import{_ as n,D as l,c as h,I as e,w as i,l as t,a as s,aa as o,o as d}from"./chunks/framework.Bj3UIrO7.js";const D=JSON.parse('{"title":"Query String Parameters","description":"","frontmatter":{"aside":false,"head":[["link",{"rel":"canonical","href":"https://pointw-dev.github.io/halchemy/parameters/passing.html"}]]},"headers":[],"relativePath":"parameters/passing.md","filePath":"parameters/passing.md"}'),k={name:"parameters/passing.md"},c=t("h1",{id:"query-string-parameters",tabindex:"-1"},[s("Query String Parameters "),t("a",{class:"header-anchor",href:"#query-string-parameters","aria-label":'Permalink to "Query String Parameters"'},"​")],-1),u=t("p",null,[s("When you need to add query string parameters to the URL of a request, halchemy makes it easy. You use the "),t("code",null,"with parameters"),s(" method. This method takes a dictionary/object of parameters and their values. Here are some examples:")],-1),E=t("div",{class:"language-python vp-adaptive-theme"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"python"),t("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"root "),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," api.root.get()")]),s(`
`),t("span",{class:"line"}),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# get the first page of customers, 100 per page")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"customers "),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," api.follow(root).to("),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'customers'"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},").with_parameters({"),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'max_results'"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":"),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"100"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},","),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'page'"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":"),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}).get()")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# adds ?max_results=100&page=1 to the URL")])])])],-1),g=t("div",{class:"language-javascript vp-adaptive-theme"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"javascript"),t("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," root"),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," await"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," api.root."),t("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),t("span",{class:"line"}),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// get the first page of customers, 100 per page")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"let"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," customers "),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," await"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," api."),t("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"follow"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(root)")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),t("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"to"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'customers'"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),t("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"withParameters"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({ max_results: "),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"100"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", page: "),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," })")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),t("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// adds ?max_results=100&page=1 to the URL")])])])],-1),y=t("div",{class:"language-ruby vp-adaptive-theme"},[t("button",{title:"Copy Code",class:"copy"}),t("span",{class:"lang"},"ruby"),t("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[t("code",null,[t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"root "),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," api.root.get")]),s(`
`),t("span",{class:"line"}),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# get the first page of customers, 100 per page")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"customers "),t("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," @api.follow(root)")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                .to("),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"customers"'),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                .with_parameters({ "),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"max_results"'),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," => "),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"100"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),t("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"page"'),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," => "),t("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," })")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                .get")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# adds ?max_results=100&page=1 to the URL")])])])],-1),m=o(`<div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><code>with parameters</code> does not simply append the query string the URL. That would not work if the URL already had query string parameters. Instead, halchemy ensures all query string parameters are properly merged.</p></div><h2 id="table-of-examples" tabindex="-1">Table of Examples <a class="header-anchor" href="#table-of-examples" aria-label="Permalink to &quot;Table of Examples&quot;">​</a></h2><p>Typically, a query string contains one or more name value pairs, e.g. <code>?name=John&amp;age=50</code>. Halchemy provides a sophisticated way to pass simple or complex parameters in the query string.</p><p>Here is a list of parameter examples: the dictionary/object you pass to <code>with parameters</code> and the query string that is added to the URL.</p><table><tr><td class="header">Parameters</td><td class="header">Query String</td><td class="header">Comments</td></tr><tr><td><pre class="tableSnippet">{&quot;name&quot;:&quot;John&quot;}</pre></td><td><pre class="tableSnippet">name=John</pre></td><td></td></tr><tr><td><pre class="tableSnippet">{&quot;age&quot;: 50}</pre></td><td><pre class="tableSnippet">age=50</pre></td><td></td></tr><tr><td><pre class="tableSnippet">{&quot;name&quot;:&quot;John Doe&quot;}</pre></td><td><pre class="tableSnippet">name=John+Doe</pre></td><td>HTML forms notation for spaces in simple strings (i.e. plus sign for spaces).</td></tr><tr><td><pre class="tableSnippet">{
  &quot;name&quot;:&quot;John&quot;,
  &quot;address&quot;:&quot;123 Main St&quot;,
  &quot;age&quot;:50
}</pre></td><td><pre class="tableSnippet">name=John&amp;address=123+Main+St&amp;age=50</pre></td><td></td></tr><tr><td><pre class="tableSnippet">{&quot;pretty&quot;:null}</pre></td><td><pre class="tableSnippet">pretty</pre></td><td>A name without a value.</td></tr><tr><td><pre class="tableSnippet">{&quot;pretty&quot;:true}</pre></td><td><pre class="tableSnippet">pretty=true</pre></td><td></td></tr><tr><td><pre class="tableSnippet">{&quot;list&quot;:[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]}</pre></td><td><pre class="tableSnippet">list=a&amp;list=b&amp;list=c</pre></td><td>A value that is a list. See <a href="/parameters/list-style.html">below</a> for how to configure serializing such lists.</td></tr><tr><td><pre class="tableSnippet">{
  &quot;name&quot;:&quot;John&quot;,
  &quot;address&quot;: {
    &quot;street&quot;:&quot;10 Main&quot;,
    &quot;city&quot;:&quot;York&quot;
  }
}</pre></td><td><pre class="tableSnippet">name=John&amp;address.street=10+Main
  &amp;address.city=York</pre></td><td>Nested objects (i.e. <b>address</b> in this case). Uses dot notation for each field.</td></tr><tr><td><pre class="tableSnippet">{&quot;where&quot;:&quot;{\\&quot;account\\&quot;:\\&quot;1234\\&quot;}&quot;}</pre></td><td><pre class="tableSnippet">where=%7B%22account%22%3A%221234%22%7D</pre></td><td>Sending an object as a string - i.e. wrap it in quotes.</td></tr><tr><td><pre class="tableSnippet">{&quot;percent&quot;:&quot;100%&quot;}</pre></td><td><pre class="tableSnippet">percent=100%25</pre></td><td>The reserved character is urlencoded to <b>%25</b>.</td></tr><tr><td><pre class="tableSnippet">{&quot;special&quot;:&quot;$&amp;+,/:;=?@&quot;}</pre></td><td><pre class="tableSnippet">special=%24%26%2B%2C%2F%3A%3B%3D%3F%40</pre></td><td>All special characters are urlencoded.</td></tr><tr><td><pre class="tableSnippet">{
  &quot;emoji&quot;:&quot;😀&quot;,
  &quot;chinese&quot;:&quot;中文&quot;
}</pre></td><td><pre class="tableSnippet">emoji=%F0%9F%98%80
  &amp;chinese=%E4%B8%AD%E6%96%87</pre></td><td>You can include Unicode in your parameters values.</td></tr></table>`,5);function q(b,F,_,f,C,S){const a=l("tab"),r=l("future-languages"),p=l("tabs");return d(),h("div",null,[c,u,e(p,null,{default:i(()=>[e(a,{name:"Python"},{default:i(()=>[E]),_:1}),e(a,{name:"JavaScript"},{default:i(()=>[g]),_:1}),e(a,{name:"Ruby"},{default:i(()=>[y]),_:1}),e(r)]),_:1}),m])}const v=n(k,[["render",q]]);export{D as __pageData,v as default};
