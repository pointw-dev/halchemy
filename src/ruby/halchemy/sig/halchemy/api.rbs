module Halchemy
  class Api
    @error_handling: ErrorHandling

    @etag_field: String
    @parameters_list_style: String

    def self.build_response: -> HttpModel::Response

    attr_accessor base_url: String
    attr_accessor error_handling: ErrorHandling
    attr_accessor headers: hash[String, String]

    attr_accessor parameters_list_style: String

    def add_headers: -> void

    def follow: -> Follower

    def optimistic_concurrency_header: -> Hash[String, String]

    def remove_headers: -> void

    def request: -> (Resource | HalResource)

    def root: -> BaseRequester

    def using_endpoint: -> BaseRequester

    private

    def self.build_resource: -> (Resource | HalResource)

    def build_resource: -> (Resource | HalResource)

    def build_response: -> HttpModel::Response

    def build_url: -> String

    def configure_base: -> void

    def configure_error_handling: -> void

    def configure_headers: -> void

    def do_settings_include_status_code: -> bool

    def extract_body: -> (String | Hash[String, Object] | nil)

    def match_condition?: -> bool

    def parse_body: -> (Hash[String, Object] | nil)

    def parse_status_code_setting: -> Array[String]

    def raise_for_errors: -> void
  end
end
